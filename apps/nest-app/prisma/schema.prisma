generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "../public/docs"
}

generator jsonSchema {
  provider = "prisma-json-schema-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  username  String     @unique
  password  String
  playlists Playlist[]

  @@map("user")
}

model Channel {
  id          String    @unique
  title       String?   @default("")
  description String?   @default("")
  country     String?   @default("")
  publishedAt DateTime?
  thumbnails  Json?
  videos      Video[]
}

model Subject {
  id     Int                @id @default(autoincrement())
  name   String
  videos SubjectsOnVideos[]
}

model Video {
  id                   String             @unique
  channelId            String
  title                String?            @default("")
  description          String?            @default("")
  publishedAt          DateTime?
  thumbnails           Json?
  status               Json?
  statistics           Json?
  liveStreamingDetails Json?
  contentDetails       Json?
  tags                 String[]
  channel              Channel            @relation(fields: [channelId], references: [id])
  subjects             SubjectsOnVideos[]
}

model SubjectsOnVideos {
  videoId   String
  subjectId Int
  subject   Subject @relation(fields: [subjectId], references: [id])
  video     Video   @relation(fields: [videoId], references: [id])

  @@id([subjectId, videoId])
}

model Playlist {
  id      Int     @id @default(autoincrement())
  ownerId Int
  name    String?
  owner   User    @relation(fields: [ownerId], references: [id])

  @@map("playlist")
}
