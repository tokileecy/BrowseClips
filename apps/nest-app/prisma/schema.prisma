generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  username  String     @unique
  password  String
  playlists Playlist[]

  @@map("user")
}

model Channel {
  id          String    @id
  title       String?   @default("")
  description String?   @default("")
  country     String?   @default("")
  publishedAt DateTime?
  thumbnails  Json?
  category  ChannelCategory @default(Streamer)
  videos      Video[]
  channelGroups ChannelGroupsOnChannels[]
}

model ChannelGroup {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  channels ChannelGroupsOnChannels[]
}

enum ChannelCategory {
  Streamer
  Clipper
}

model ChannelGroupsOnChannels {
  channel Channel @relation(fields: [channelId], references: [id])
  channelId String
  channelGroup ChannelGroup @relation(fields: [channelGroupId], references: [id])
  channelGroupId Int
  assignedAt DateTime @default(now())

  @@id([channelGroupId, channelId])
}

model Subject {
  id     Int                @id @default(autoincrement())
  name   String
  videos SubjectsOnVideos[]
}

model Video {
  id                   String             @id
  channelId            String
  title                String?            @default("")
  description          String?            @default("")
  publishedAt          DateTime?
  thumbnails           Json?
  status               Json?
  statistics           Json?
  liveStreamingDetails Json?
  contentDetails       Json?
  tags                 String[]           @default([])
  youtubeData          Json?
  channel              Channel            @relation(fields: [channelId], references: [id])
  subjects             SubjectsOnVideos[]
}

model SubjectsOnVideos {
  videoId   String
  subjectId Int
  subject   Subject @relation(fields: [subjectId], references: [id])
  video     Video   @relation(fields: [videoId], references: [id])

  @@id([subjectId, videoId])
}

model Playlist {
  id      Int     @id @default(autoincrement())
  ownerId Int
  name    String?
  owner   User    @relation(fields: [ownerId], references: [id])

  @@map("playlist")
}
